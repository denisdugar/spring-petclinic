pipeline{
  agent any
  stages{
    stage("Get jar file"){
      steps{
         sh "cp /var/jenkins_home/sprin-petclinic-2.4.5.jar ."
      }
    }
    stage("build image"){
      steps{
        sh "docker build -t my_project ."
      }
    }
    stage("Tag and push image") {
      steps{
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aws-key', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY']]) {
            sh """docker run --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY amazon/aws-cli ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 140625812000.dkr.ecr.eu-west-1.amazonaws.com; \
            docker tag my_project:latest 140625812000.dkr.ecr.eu-west-1.amazonaws.com/my_project:latest; \
            docker push 140625812000.dkr.ecr.eu-west-1.amazonaws.com/my_project:latest; \
            sleep 1m"""
        }
      }
    }
  stage("Update ECS task") {
      steps{
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'aws-key', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY']]) {
            sh """export TASK_ECS=\$(docker run --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY amazon/aws-cli ecs list-tasks --cluster cluster --service ecs-service --output text --query taskArns[0]);  \
               docker run --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY amazon/aws-cli ecs stop-task --cluster cluster --task \$TASK_ECS"""
        }
      }
    }
  }
}
